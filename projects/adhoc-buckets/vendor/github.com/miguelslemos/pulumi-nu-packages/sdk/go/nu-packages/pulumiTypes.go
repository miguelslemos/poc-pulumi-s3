// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nupackages

import (
	"context"
	"reflect"

	"github.com/miguelslemos/pulumi-nu-packages/sdk/go/nu-packages/internal"
	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/s3"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

// The set of arguments for constructing a Bucket resource.
type Bucket struct {
	// Sets the accelerate configuration of an existing bucket. Can be `Enabled` or `Suspended`.
	AccelerationStatus *string `pulumi:"accelerationStatus"`
	// The [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Valid values are `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, and `log-delivery-write`. Defaults to `private`.  Conflicts with `grant`.
	Acl *string `pulumi:"acl"`
	// The ARN of the bucket. Will be of format `arn:aws:s3:::bucketname`.
	Arn *string `pulumi:"arn"`
	// The name of the bucket. If omitted, this provider will assign a random, unique name. Must be lowercase and less than or equal to 63 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
	Bucket *string `pulumi:"bucket"`
	// Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`. Must be lowercase and less than or equal to 37 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
	BucketPrefix *string `pulumi:"bucketPrefix"`
	// A rule of [Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) (documented below).
	CorsRules []s3.BucketCorsRule `pulumi:"corsRules"`
	// A boolean that indicates all objects (including any [locked objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html)) should be deleted from the bucket so that the bucket can be destroyed without error. These objects are *not* recoverable.
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// An [ACL policy grant](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#sample-acl) (documented below). Conflicts with `acl`.
	Grants []s3.BucketGrant `pulumi:"grants"`
	// The [Route 53 Hosted Zone ID](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_website_region_endpoints) for this bucket's region.
	HostedZoneId *string `pulumi:"hostedZoneId"`
	// A configuration of [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) (documented below).
	LifecycleRules []s3.BucketLifecycleRule `pulumi:"lifecycleRules"`
	// A settings of [bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/UG/ManagingBucketLogging.html) (documented below).
	Loggings []s3.BucketLogging `pulumi:"loggings"`
	// A configuration of [S3 object locking](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) (documented below)
	ObjectLockConfiguration *s3.BucketObjectLockConfiguration `pulumi:"objectLockConfiguration"`
	// A valid [bucket policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html) JSON document. Note that if the policy document is not specific enough (but still valid), this provider may view the policy as constantly changing in a `pulumi preview`. In this case, please make sure you use the verbose/specific version of the policy.
	Policy *string `pulumi:"policy"`
	// A configuration of [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html) (documented below).
	ReplicationConfiguration *s3.BucketReplicationConfiguration `pulumi:"replicationConfiguration"`
	// Specifies who should bear the cost of Amazon S3 data transfer.
	// Can be either `BucketOwner` or `Requester`. By default, the owner of the S3 bucket would incur
	// the costs of any data transfer. See [Requester Pays Buckets](http://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html)
	// developer guide for more information.
	RequestPayer *string `pulumi:"requestPayer"`
	// A configuration of [server-side encryption configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) (documented below)
	ServerSideEncryptionConfiguration *s3.BucketServerSideEncryptionConfiguration `pulumi:"serverSideEncryptionConfiguration"`
	// A map of tags to assign to the bucket. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A state of [versioning](https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html) (documented below)
	Versioning *s3.BucketVersioning `pulumi:"versioning"`
	// A website object (documented below).
	Website *s3.BucketWebsite `pulumi:"website"`
	// The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records.
	WebsiteDomain *string `pulumi:"websiteDomain"`
	// The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
	WebsiteEndpoint *string `pulumi:"websiteEndpoint"`
}

// BucketInput is an input type that accepts BucketArgs and BucketOutput values.
// You can construct a concrete instance of `BucketInput` via:
//
//	BucketArgs{...}
type BucketInput interface {
	pulumi.Input

	ToBucketOutput() BucketOutput
	ToBucketOutputWithContext(context.Context) BucketOutput
}

// The set of arguments for constructing a Bucket resource.
type BucketArgs struct {
	// Sets the accelerate configuration of an existing bucket. Can be `Enabled` or `Suspended`.
	AccelerationStatus pulumi.StringPtrInput `pulumi:"accelerationStatus"`
	// The [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Valid values are `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, and `log-delivery-write`. Defaults to `private`.  Conflicts with `grant`.
	Acl pulumi.StringPtrInput `pulumi:"acl"`
	// The ARN of the bucket. Will be of format `arn:aws:s3:::bucketname`.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// The name of the bucket. If omitted, this provider will assign a random, unique name. Must be lowercase and less than or equal to 63 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`. Must be lowercase and less than or equal to 37 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
	BucketPrefix pulumi.StringPtrInput `pulumi:"bucketPrefix"`
	// A rule of [Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) (documented below).
	CorsRules s3.BucketCorsRuleArrayInput `pulumi:"corsRules"`
	// A boolean that indicates all objects (including any [locked objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html)) should be deleted from the bucket so that the bucket can be destroyed without error. These objects are *not* recoverable.
	ForceDestroy pulumi.BoolPtrInput `pulumi:"forceDestroy"`
	// An [ACL policy grant](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#sample-acl) (documented below). Conflicts with `acl`.
	Grants s3.BucketGrantArrayInput `pulumi:"grants"`
	// The [Route 53 Hosted Zone ID](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_website_region_endpoints) for this bucket's region.
	HostedZoneId pulumi.StringPtrInput `pulumi:"hostedZoneId"`
	// A configuration of [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) (documented below).
	LifecycleRules s3.BucketLifecycleRuleArrayInput `pulumi:"lifecycleRules"`
	// A settings of [bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/UG/ManagingBucketLogging.html) (documented below).
	Loggings s3.BucketLoggingArrayInput `pulumi:"loggings"`
	// A configuration of [S3 object locking](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) (documented below)
	ObjectLockConfiguration s3.BucketObjectLockConfigurationPtrInput `pulumi:"objectLockConfiguration"`
	// A valid [bucket policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html) JSON document. Note that if the policy document is not specific enough (but still valid), this provider may view the policy as constantly changing in a `pulumi preview`. In this case, please make sure you use the verbose/specific version of the policy.
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// A configuration of [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html) (documented below).
	ReplicationConfiguration s3.BucketReplicationConfigurationPtrInput `pulumi:"replicationConfiguration"`
	// Specifies who should bear the cost of Amazon S3 data transfer.
	// Can be either `BucketOwner` or `Requester`. By default, the owner of the S3 bucket would incur
	// the costs of any data transfer. See [Requester Pays Buckets](http://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html)
	// developer guide for more information.
	RequestPayer pulumi.StringPtrInput `pulumi:"requestPayer"`
	// A configuration of [server-side encryption configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) (documented below)
	ServerSideEncryptionConfiguration s3.BucketServerSideEncryptionConfigurationPtrInput `pulumi:"serverSideEncryptionConfiguration"`
	// A map of tags to assign to the bucket. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// A state of [versioning](https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html) (documented below)
	Versioning s3.BucketVersioningPtrInput `pulumi:"versioning"`
	// A website object (documented below).
	Website s3.BucketWebsitePtrInput `pulumi:"website"`
	// The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records.
	WebsiteDomain pulumi.StringPtrInput `pulumi:"websiteDomain"`
	// The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
	WebsiteEndpoint pulumi.StringPtrInput `pulumi:"websiteEndpoint"`
}

func (BucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Bucket)(nil)).Elem()
}

func (i BucketArgs) ToBucketOutput() BucketOutput {
	return i.ToBucketOutputWithContext(context.Background())
}

func (i BucketArgs) ToBucketOutputWithContext(ctx context.Context) BucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketOutput)
}

func (i BucketArgs) ToOutput(ctx context.Context) pulumix.Output[Bucket] {
	return pulumix.Output[Bucket]{
		OutputState: i.ToBucketOutputWithContext(ctx).OutputState,
	}
}

func (i BucketArgs) ToBucketPtrOutput() BucketPtrOutput {
	return i.ToBucketPtrOutputWithContext(context.Background())
}

func (i BucketArgs) ToBucketPtrOutputWithContext(ctx context.Context) BucketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketOutput).ToBucketPtrOutputWithContext(ctx)
}

// BucketPtrInput is an input type that accepts BucketArgs, BucketPtr and BucketPtrOutput values.
// You can construct a concrete instance of `BucketPtrInput` via:
//
//	        BucketArgs{...}
//
//	or:
//
//	        nil
type BucketPtrInput interface {
	pulumi.Input

	ToBucketPtrOutput() BucketPtrOutput
	ToBucketPtrOutputWithContext(context.Context) BucketPtrOutput
}

type bucketPtrType BucketArgs

func BucketPtr(v *BucketArgs) BucketPtrInput {
	return (*bucketPtrType)(v)
}

func (*bucketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Bucket)(nil)).Elem()
}

func (i *bucketPtrType) ToBucketPtrOutput() BucketPtrOutput {
	return i.ToBucketPtrOutputWithContext(context.Background())
}

func (i *bucketPtrType) ToBucketPtrOutputWithContext(ctx context.Context) BucketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketPtrOutput)
}

func (i *bucketPtrType) ToOutput(ctx context.Context) pulumix.Output[*Bucket] {
	return pulumix.Output[*Bucket]{
		OutputState: i.ToBucketPtrOutputWithContext(ctx).OutputState,
	}
}

// The set of arguments for constructing a Bucket resource.
type BucketOutput struct{ *pulumi.OutputState }

func (BucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Bucket)(nil)).Elem()
}

func (o BucketOutput) ToBucketOutput() BucketOutput {
	return o
}

func (o BucketOutput) ToBucketOutputWithContext(ctx context.Context) BucketOutput {
	return o
}

func (o BucketOutput) ToBucketPtrOutput() BucketPtrOutput {
	return o.ToBucketPtrOutputWithContext(context.Background())
}

func (o BucketOutput) ToBucketPtrOutputWithContext(ctx context.Context) BucketPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Bucket) *Bucket {
		return &v
	}).(BucketPtrOutput)
}

func (o BucketOutput) ToOutput(ctx context.Context) pulumix.Output[Bucket] {
	return pulumix.Output[Bucket]{
		OutputState: o.OutputState,
	}
}

// Sets the accelerate configuration of an existing bucket. Can be `Enabled` or `Suspended`.
func (o BucketOutput) AccelerationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Bucket) *string { return v.AccelerationStatus }).(pulumi.StringPtrOutput)
}

// The [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Valid values are `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, and `log-delivery-write`. Defaults to `private`.  Conflicts with `grant`.
func (o BucketOutput) Acl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Bucket) *string { return v.Acl }).(pulumi.StringPtrOutput)
}

// The ARN of the bucket. Will be of format `arn:aws:s3:::bucketname`.
func (o BucketOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Bucket) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The name of the bucket. If omitted, this provider will assign a random, unique name. Must be lowercase and less than or equal to 63 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
func (o BucketOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Bucket) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`. Must be lowercase and less than or equal to 37 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
func (o BucketOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Bucket) *string { return v.BucketPrefix }).(pulumi.StringPtrOutput)
}

// A rule of [Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) (documented below).
func (o BucketOutput) CorsRules() s3.BucketCorsRuleArrayOutput {
	return o.ApplyT(func(v Bucket) []s3.BucketCorsRule { return v.CorsRules }).(s3.BucketCorsRuleArrayOutput)
}

// A boolean that indicates all objects (including any [locked objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html)) should be deleted from the bucket so that the bucket can be destroyed without error. These objects are *not* recoverable.
func (o BucketOutput) ForceDestroy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Bucket) *bool { return v.ForceDestroy }).(pulumi.BoolPtrOutput)
}

// An [ACL policy grant](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#sample-acl) (documented below). Conflicts with `acl`.
func (o BucketOutput) Grants() s3.BucketGrantArrayOutput {
	return o.ApplyT(func(v Bucket) []s3.BucketGrant { return v.Grants }).(s3.BucketGrantArrayOutput)
}

// The [Route 53 Hosted Zone ID](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_website_region_endpoints) for this bucket's region.
func (o BucketOutput) HostedZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Bucket) *string { return v.HostedZoneId }).(pulumi.StringPtrOutput)
}

// A configuration of [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) (documented below).
func (o BucketOutput) LifecycleRules() s3.BucketLifecycleRuleArrayOutput {
	return o.ApplyT(func(v Bucket) []s3.BucketLifecycleRule { return v.LifecycleRules }).(s3.BucketLifecycleRuleArrayOutput)
}

// A settings of [bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/UG/ManagingBucketLogging.html) (documented below).
func (o BucketOutput) Loggings() s3.BucketLoggingArrayOutput {
	return o.ApplyT(func(v Bucket) []s3.BucketLogging { return v.Loggings }).(s3.BucketLoggingArrayOutput)
}

// A configuration of [S3 object locking](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) (documented below)
func (o BucketOutput) ObjectLockConfiguration() s3.BucketObjectLockConfigurationPtrOutput {
	return o.ApplyT(func(v Bucket) *s3.BucketObjectLockConfiguration { return v.ObjectLockConfiguration }).(s3.BucketObjectLockConfigurationPtrOutput)
}

// A valid [bucket policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html) JSON document. Note that if the policy document is not specific enough (but still valid), this provider may view the policy as constantly changing in a `pulumi preview`. In this case, please make sure you use the verbose/specific version of the policy.
func (o BucketOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Bucket) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// A configuration of [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html) (documented below).
func (o BucketOutput) ReplicationConfiguration() s3.BucketReplicationConfigurationPtrOutput {
	return o.ApplyT(func(v Bucket) *s3.BucketReplicationConfiguration { return v.ReplicationConfiguration }).(s3.BucketReplicationConfigurationPtrOutput)
}

// Specifies who should bear the cost of Amazon S3 data transfer.
// Can be either `BucketOwner` or `Requester`. By default, the owner of the S3 bucket would incur
// the costs of any data transfer. See [Requester Pays Buckets](http://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html)
// developer guide for more information.
func (o BucketOutput) RequestPayer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Bucket) *string { return v.RequestPayer }).(pulumi.StringPtrOutput)
}

// A configuration of [server-side encryption configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) (documented below)
func (o BucketOutput) ServerSideEncryptionConfiguration() s3.BucketServerSideEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v Bucket) *s3.BucketServerSideEncryptionConfiguration { return v.ServerSideEncryptionConfiguration }).(s3.BucketServerSideEncryptionConfigurationPtrOutput)
}

// A map of tags to assign to the bucket. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o BucketOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v Bucket) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// A state of [versioning](https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html) (documented below)
func (o BucketOutput) Versioning() s3.BucketVersioningPtrOutput {
	return o.ApplyT(func(v Bucket) *s3.BucketVersioning { return v.Versioning }).(s3.BucketVersioningPtrOutput)
}

// A website object (documented below).
func (o BucketOutput) Website() s3.BucketWebsitePtrOutput {
	return o.ApplyT(func(v Bucket) *s3.BucketWebsite { return v.Website }).(s3.BucketWebsitePtrOutput)
}

// The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records.
func (o BucketOutput) WebsiteDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Bucket) *string { return v.WebsiteDomain }).(pulumi.StringPtrOutput)
}

// The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
func (o BucketOutput) WebsiteEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Bucket) *string { return v.WebsiteEndpoint }).(pulumi.StringPtrOutput)
}

type BucketPtrOutput struct{ *pulumi.OutputState }

func (BucketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Bucket)(nil)).Elem()
}

func (o BucketPtrOutput) ToBucketPtrOutput() BucketPtrOutput {
	return o
}

func (o BucketPtrOutput) ToBucketPtrOutputWithContext(ctx context.Context) BucketPtrOutput {
	return o
}

func (o BucketPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Bucket] {
	return pulumix.Output[*Bucket]{
		OutputState: o.OutputState,
	}
}

func (o BucketPtrOutput) Elem() BucketOutput {
	return o.ApplyT(func(v *Bucket) Bucket {
		if v != nil {
			return *v
		}
		var ret Bucket
		return ret
	}).(BucketOutput)
}

// Sets the accelerate configuration of an existing bucket. Can be `Enabled` or `Suspended`.
func (o BucketPtrOutput) AccelerationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bucket) *string {
		if v == nil {
			return nil
		}
		return v.AccelerationStatus
	}).(pulumi.StringPtrOutput)
}

// The [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Valid values are `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, and `log-delivery-write`. Defaults to `private`.  Conflicts with `grant`.
func (o BucketPtrOutput) Acl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bucket) *string {
		if v == nil {
			return nil
		}
		return v.Acl
	}).(pulumi.StringPtrOutput)
}

// The ARN of the bucket. Will be of format `arn:aws:s3:::bucketname`.
func (o BucketPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bucket) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// The name of the bucket. If omitted, this provider will assign a random, unique name. Must be lowercase and less than or equal to 63 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
func (o BucketPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bucket) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`. Must be lowercase and less than or equal to 37 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
func (o BucketPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bucket) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// A rule of [Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) (documented below).
func (o BucketPtrOutput) CorsRules() s3.BucketCorsRuleArrayOutput {
	return o.ApplyT(func(v *Bucket) []s3.BucketCorsRule {
		if v == nil {
			return nil
		}
		return v.CorsRules
	}).(s3.BucketCorsRuleArrayOutput)
}

// A boolean that indicates all objects (including any [locked objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html)) should be deleted from the bucket so that the bucket can be destroyed without error. These objects are *not* recoverable.
func (o BucketPtrOutput) ForceDestroy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Bucket) *bool {
		if v == nil {
			return nil
		}
		return v.ForceDestroy
	}).(pulumi.BoolPtrOutput)
}

// An [ACL policy grant](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#sample-acl) (documented below). Conflicts with `acl`.
func (o BucketPtrOutput) Grants() s3.BucketGrantArrayOutput {
	return o.ApplyT(func(v *Bucket) []s3.BucketGrant {
		if v == nil {
			return nil
		}
		return v.Grants
	}).(s3.BucketGrantArrayOutput)
}

// The [Route 53 Hosted Zone ID](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_website_region_endpoints) for this bucket's region.
func (o BucketPtrOutput) HostedZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bucket) *string {
		if v == nil {
			return nil
		}
		return v.HostedZoneId
	}).(pulumi.StringPtrOutput)
}

// A configuration of [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) (documented below).
func (o BucketPtrOutput) LifecycleRules() s3.BucketLifecycleRuleArrayOutput {
	return o.ApplyT(func(v *Bucket) []s3.BucketLifecycleRule {
		if v == nil {
			return nil
		}
		return v.LifecycleRules
	}).(s3.BucketLifecycleRuleArrayOutput)
}

// A settings of [bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/UG/ManagingBucketLogging.html) (documented below).
func (o BucketPtrOutput) Loggings() s3.BucketLoggingArrayOutput {
	return o.ApplyT(func(v *Bucket) []s3.BucketLogging {
		if v == nil {
			return nil
		}
		return v.Loggings
	}).(s3.BucketLoggingArrayOutput)
}

// A configuration of [S3 object locking](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) (documented below)
func (o BucketPtrOutput) ObjectLockConfiguration() s3.BucketObjectLockConfigurationPtrOutput {
	return o.ApplyT(func(v *Bucket) *s3.BucketObjectLockConfiguration {
		if v == nil {
			return nil
		}
		return v.ObjectLockConfiguration
	}).(s3.BucketObjectLockConfigurationPtrOutput)
}

// A valid [bucket policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html) JSON document. Note that if the policy document is not specific enough (but still valid), this provider may view the policy as constantly changing in a `pulumi preview`. In this case, please make sure you use the verbose/specific version of the policy.
func (o BucketPtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bucket) *string {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(pulumi.StringPtrOutput)
}

// A configuration of [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html) (documented below).
func (o BucketPtrOutput) ReplicationConfiguration() s3.BucketReplicationConfigurationPtrOutput {
	return o.ApplyT(func(v *Bucket) *s3.BucketReplicationConfiguration {
		if v == nil {
			return nil
		}
		return v.ReplicationConfiguration
	}).(s3.BucketReplicationConfigurationPtrOutput)
}

// Specifies who should bear the cost of Amazon S3 data transfer.
// Can be either `BucketOwner` or `Requester`. By default, the owner of the S3 bucket would incur
// the costs of any data transfer. See [Requester Pays Buckets](http://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html)
// developer guide for more information.
func (o BucketPtrOutput) RequestPayer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bucket) *string {
		if v == nil {
			return nil
		}
		return v.RequestPayer
	}).(pulumi.StringPtrOutput)
}

// A configuration of [server-side encryption configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) (documented below)
func (o BucketPtrOutput) ServerSideEncryptionConfiguration() s3.BucketServerSideEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v *Bucket) *s3.BucketServerSideEncryptionConfiguration {
		if v == nil {
			return nil
		}
		return v.ServerSideEncryptionConfiguration
	}).(s3.BucketServerSideEncryptionConfigurationPtrOutput)
}

// A map of tags to assign to the bucket. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o BucketPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Bucket) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// A state of [versioning](https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html) (documented below)
func (o BucketPtrOutput) Versioning() s3.BucketVersioningPtrOutput {
	return o.ApplyT(func(v *Bucket) *s3.BucketVersioning {
		if v == nil {
			return nil
		}
		return v.Versioning
	}).(s3.BucketVersioningPtrOutput)
}

// A website object (documented below).
func (o BucketPtrOutput) Website() s3.BucketWebsitePtrOutput {
	return o.ApplyT(func(v *Bucket) *s3.BucketWebsite {
		if v == nil {
			return nil
		}
		return v.Website
	}).(s3.BucketWebsitePtrOutput)
}

// The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records.
func (o BucketPtrOutput) WebsiteDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bucket) *string {
		if v == nil {
			return nil
		}
		return v.WebsiteDomain
	}).(pulumi.StringPtrOutput)
}

// The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
func (o BucketPtrOutput) WebsiteEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bucket) *string {
		if v == nil {
			return nil
		}
		return v.WebsiteEndpoint
	}).(pulumi.StringPtrOutput)
}

// Reference to an existing bucket.
type BucketResultBucketID struct {
	// Arn of the bucket. Only one of [arn] or [name] can be specified.
	Arn *string `pulumi:"arn"`
	// Name of the bucket. Only one of [arn] or [name] can be specified.
	Name *string `pulumi:"name"`
}

// Reference to an existing bucket.
type BucketResultBucketIDOutput struct{ *pulumi.OutputState }

func (BucketResultBucketIDOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketResultBucketID)(nil)).Elem()
}

func (o BucketResultBucketIDOutput) ToBucketResultBucketIDOutput() BucketResultBucketIDOutput {
	return o
}

func (o BucketResultBucketIDOutput) ToBucketResultBucketIDOutputWithContext(ctx context.Context) BucketResultBucketIDOutput {
	return o
}

func (o BucketResultBucketIDOutput) ToOutput(ctx context.Context) pulumix.Output[BucketResultBucketID] {
	return pulumix.Output[BucketResultBucketID]{
		OutputState: o.OutputState,
	}
}

// Arn of the bucket. Only one of [arn] or [name] can be specified.
func (o BucketResultBucketIDOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketResultBucketID) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Name of the bucket. Only one of [arn] or [name] can be specified.
func (o BucketResultBucketIDOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketResultBucketID) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BucketResultBucketIDPtrOutput struct{ *pulumi.OutputState }

func (BucketResultBucketIDPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketResultBucketID)(nil)).Elem()
}

func (o BucketResultBucketIDPtrOutput) ToBucketResultBucketIDPtrOutput() BucketResultBucketIDPtrOutput {
	return o
}

func (o BucketResultBucketIDPtrOutput) ToBucketResultBucketIDPtrOutputWithContext(ctx context.Context) BucketResultBucketIDPtrOutput {
	return o
}

func (o BucketResultBucketIDPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BucketResultBucketID] {
	return pulumix.Output[*BucketResultBucketID]{
		OutputState: o.OutputState,
	}
}

func (o BucketResultBucketIDPtrOutput) Elem() BucketResultBucketIDOutput {
	return o.ApplyT(func(v *BucketResultBucketID) BucketResultBucketID {
		if v != nil {
			return *v
		}
		var ret BucketResultBucketID
		return ret
	}).(BucketResultBucketIDOutput)
}

// Arn of the bucket. Only one of [arn] or [name] can be specified.
func (o BucketResultBucketIDPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketResultBucketID) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// Name of the bucket. Only one of [arn] or [name] can be specified.
func (o BucketResultBucketIDPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketResultBucketID) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Reference to an existing bucket.
type ExistingBucket struct {
	// Arn of the bucket. Only one of [arn] or [name] can be specified.
	Arn *string `pulumi:"arn"`
	// Name of the bucket. Only one of [arn] or [name] can be specified.
	Name *string `pulumi:"name"`
}

// ExistingBucketInput is an input type that accepts ExistingBucketArgs and ExistingBucketOutput values.
// You can construct a concrete instance of `ExistingBucketInput` via:
//
//	ExistingBucketArgs{...}
type ExistingBucketInput interface {
	pulumi.Input

	ToExistingBucketOutput() ExistingBucketOutput
	ToExistingBucketOutputWithContext(context.Context) ExistingBucketOutput
}

// Reference to an existing bucket.
type ExistingBucketArgs struct {
	// Arn of the bucket. Only one of [arn] or [name] can be specified.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// Name of the bucket. Only one of [arn] or [name] can be specified.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ExistingBucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExistingBucket)(nil)).Elem()
}

func (i ExistingBucketArgs) ToExistingBucketOutput() ExistingBucketOutput {
	return i.ToExistingBucketOutputWithContext(context.Background())
}

func (i ExistingBucketArgs) ToExistingBucketOutputWithContext(ctx context.Context) ExistingBucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExistingBucketOutput)
}

func (i ExistingBucketArgs) ToOutput(ctx context.Context) pulumix.Output[ExistingBucket] {
	return pulumix.Output[ExistingBucket]{
		OutputState: i.ToExistingBucketOutputWithContext(ctx).OutputState,
	}
}

func (i ExistingBucketArgs) ToExistingBucketPtrOutput() ExistingBucketPtrOutput {
	return i.ToExistingBucketPtrOutputWithContext(context.Background())
}

func (i ExistingBucketArgs) ToExistingBucketPtrOutputWithContext(ctx context.Context) ExistingBucketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExistingBucketOutput).ToExistingBucketPtrOutputWithContext(ctx)
}

// ExistingBucketPtrInput is an input type that accepts ExistingBucketArgs, ExistingBucketPtr and ExistingBucketPtrOutput values.
// You can construct a concrete instance of `ExistingBucketPtrInput` via:
//
//	        ExistingBucketArgs{...}
//
//	or:
//
//	        nil
type ExistingBucketPtrInput interface {
	pulumi.Input

	ToExistingBucketPtrOutput() ExistingBucketPtrOutput
	ToExistingBucketPtrOutputWithContext(context.Context) ExistingBucketPtrOutput
}

type existingBucketPtrType ExistingBucketArgs

func ExistingBucketPtr(v *ExistingBucketArgs) ExistingBucketPtrInput {
	return (*existingBucketPtrType)(v)
}

func (*existingBucketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExistingBucket)(nil)).Elem()
}

func (i *existingBucketPtrType) ToExistingBucketPtrOutput() ExistingBucketPtrOutput {
	return i.ToExistingBucketPtrOutputWithContext(context.Background())
}

func (i *existingBucketPtrType) ToExistingBucketPtrOutputWithContext(ctx context.Context) ExistingBucketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExistingBucketPtrOutput)
}

func (i *existingBucketPtrType) ToOutput(ctx context.Context) pulumix.Output[*ExistingBucket] {
	return pulumix.Output[*ExistingBucket]{
		OutputState: i.ToExistingBucketPtrOutputWithContext(ctx).OutputState,
	}
}

// Reference to an existing bucket.
type ExistingBucketOutput struct{ *pulumi.OutputState }

func (ExistingBucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExistingBucket)(nil)).Elem()
}

func (o ExistingBucketOutput) ToExistingBucketOutput() ExistingBucketOutput {
	return o
}

func (o ExistingBucketOutput) ToExistingBucketOutputWithContext(ctx context.Context) ExistingBucketOutput {
	return o
}

func (o ExistingBucketOutput) ToExistingBucketPtrOutput() ExistingBucketPtrOutput {
	return o.ToExistingBucketPtrOutputWithContext(context.Background())
}

func (o ExistingBucketOutput) ToExistingBucketPtrOutputWithContext(ctx context.Context) ExistingBucketPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExistingBucket) *ExistingBucket {
		return &v
	}).(ExistingBucketPtrOutput)
}

func (o ExistingBucketOutput) ToOutput(ctx context.Context) pulumix.Output[ExistingBucket] {
	return pulumix.Output[ExistingBucket]{
		OutputState: o.OutputState,
	}
}

// Arn of the bucket. Only one of [arn] or [name] can be specified.
func (o ExistingBucketOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExistingBucket) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Name of the bucket. Only one of [arn] or [name] can be specified.
func (o ExistingBucketOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExistingBucket) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ExistingBucketPtrOutput struct{ *pulumi.OutputState }

func (ExistingBucketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExistingBucket)(nil)).Elem()
}

func (o ExistingBucketPtrOutput) ToExistingBucketPtrOutput() ExistingBucketPtrOutput {
	return o
}

func (o ExistingBucketPtrOutput) ToExistingBucketPtrOutputWithContext(ctx context.Context) ExistingBucketPtrOutput {
	return o
}

func (o ExistingBucketPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ExistingBucket] {
	return pulumix.Output[*ExistingBucket]{
		OutputState: o.OutputState,
	}
}

func (o ExistingBucketPtrOutput) Elem() ExistingBucketOutput {
	return o.ApplyT(func(v *ExistingBucket) ExistingBucket {
		if v != nil {
			return *v
		}
		var ret ExistingBucket
		return ret
	}).(ExistingBucketOutput)
}

// Arn of the bucket. Only one of [arn] or [name] can be specified.
func (o ExistingBucketPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExistingBucket) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// Name of the bucket. Only one of [arn] or [name] can be specified.
func (o ExistingBucketPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExistingBucket) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BucketInput)(nil)).Elem(), BucketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketPtrInput)(nil)).Elem(), BucketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExistingBucketInput)(nil)).Elem(), ExistingBucketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExistingBucketPtrInput)(nil)).Elem(), ExistingBucketArgs{})
	pulumi.RegisterOutputType(BucketOutput{})
	pulumi.RegisterOutputType(BucketPtrOutput{})
	pulumi.RegisterOutputType(BucketResultBucketIDOutput{})
	pulumi.RegisterOutputType(BucketResultBucketIDPtrOutput{})
	pulumi.RegisterOutputType(ExistingBucketOutput{})
	pulumi.RegisterOutputType(ExistingBucketPtrOutput{})
}
